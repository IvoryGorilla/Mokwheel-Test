{% schema %}
{
  "name": "alp Secondary Tidy BK",
  "class": "alp-secondary-tidy",
  "settings": [
    {
      "type": "text",
      "id": "image_aspect_ratio",
      "label": "Image Aspect Ratio",
      "default": "3/2"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#000000"
    },
    {
      "type": "select",
      "id": "container",
      "label": "Layout",
      "default": "alp-container",
      "options": [
        {
          "value": "alp-container",
          "label": "Default"
        },
        {
          "value": "alp-container-fluid",
          "label": "Fluid container"
        },
        {
          "value": "alp-full-width",
          "label": "Full width"
        }
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding top",
      "default": 0,
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "em"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding bottom",
      "default": 0,
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "em"
    },
    {
      "type": "checkbox",
      "id": "reset_spacing",
      "label": "Remove default space between sections",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "block-item",
      "name": "Block Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "textarea",
          "id": "title",
          "label": "Title",
          "default": "David W."
        },
        {
          "type": "textarea",
          "id": "desc",
          "label": "Desc",
          "default": "Exceeds the reputation of  99% of sellers - Consistently rated 5 Stars across all models in our store"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "alp Secondary Tidy BK"
    }
  ]
}
{% endschema %}

{% liquid
  assign st = section.settings
  assign container = st.container
  assign reset_spacing = ''
  if st.reset_spacing
    assign reset_spacing = ' remove_spacing'
  endif
%}

{%- capture style -%}
      --bg-color: {{ st.bg_color }};--text-color: {{ st.text_color }};--padding-top: {{ st.padding_top }};--padding-bottom: {{ st.padding_bottom }};
  {%- endcapture -%}

{% style %}
  /* .alp-section.alp-secondary-tidy-wrapper {
    padding: var(--spacing) 0;
  } */
  .alp-index-real-new-item {
    overflow: hidden;
    position: relative;
  }
  .alp-index-real-new-item img {
    display: block;
  }
  .alp-image-real-item-info {
    text-align: center;
    max-width: 60%;
    margin: 32px auto 0;
  }
  .alp-image-real-item-title {
    font-size: clamp(18px, 2.35vw, 32px);
    font-weight: 500;
    line-height: 1.8;
  }
  .alp-image-real-item-desc {
    font-size: clamp(14px, 1vw, 16px);
  }

  .alp-secondary-tidy-container .swiperImageWrapper.go-margin-out .swiperImage.swiper {
    margin-left: -100%;
    margin-right: -100%;
  }

  .alp-secondary-tidy-container .swiperImage.swiper .swiper-slide .alp-index-real-new-item {
    transition: 0.3s;
    opacity: 0;
  }

  .alp-secondary-tidy-container .swiperImage.swiper .swiper-slide.swiper-slide-visible .alp-index-real-new-item {
    transition: 0.3s;
    opacity: 1;
  }

  /*  */
  .pagination-secondary-tidy {
    margin-top: 32px;
  }
  .swiper-pagination-alp-secondary-tidy
    .swiper-pagination-bullets
    span.swiper-pagination-bullet.swiper-pagination-bullet-active:after {
    height: 6px;
  }
  .swiper-pagination-alp-secondary-tidy .swiper-pagination-bullets span.swiper-pagination-bullet:after {
    height: 2px;
  }
  .swiper-pagination-alp-secondary-tidy
    .swiper-pagination-bullets
    span.swiper-pagination-bullet.swiper-pagination-bullet-active,
  .swiper-pagination-alp-secondary-tidy .swiper-pagination-bullets span.swiper-pagination-bullet {
    width: 46px;
  }
  /*  */

  /*  */
  .alp-secondary-tidy-container .alp-swiper-navigation {
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
  }
  .alp-secondary-tidy-container .swiper-button-prev,
  .alp-secondary-tidy-container .swiper-button-next {
    display: block;
    position: static;
    background: #ffffff;
    color: #0000009e;
    border: 1px solid #000;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    margin-top: 0;
  }
  .alp-secondary-tidy-container .swiper-button-prev::after,
  .alp-secondary-tidy-container .swiper-button-next::after {
    display: none;
  }
  @media (min-width: 1000px) {
    .alp-index-real-new-item-img img {
      aspect-ratio: 10/7;
    }
  }
  @media (max-width: 999px) {
    .alp-secondary-tidy-container {
      padding: 0;
    }
    .alp-secondary-tidy-con {
      margin-top: 0;
      flex-direction: column;
    }
    .alp-secondary-tidy-container .swiperImageWrapper.go-margin-out .swiperImage.swiper {
      margin-left: -140%;
      margin-right: -140%;
    }
    .alp-image-real-item-info {
      max-width: none;
      margin: 32px 16px 0;
    }
    .swiper-pagination-alp-secondary-tidy
      .swiper-pagination-bullets
      span.swiper-pagination-bullet.swiper-pagination-bullet-active,
    .swiper-pagination-alp-secondary-tidy .swiper-pagination-bullets span.swiper-pagination-bullet {
      width: 37px;
    }
  }
{% endstyle %}

<div
  class="alp-section alp-secondary-tidy-wrapper relative {{ reset_spacing }}"
  style="{{ style }}"
  data-stid="{{ section.id }}"
>
  <div class="alp-section-container alp-secondary-tidy-container page-width {{ container }}">
    <div class="alp-secondary-tidy-con">
      <div class="swiperImageWrapper go-margin-out overflow-hidden">
        <div class="swiperImage swiper">
          <div class="swiper-wrapper">
            {%- if section.blocks.size > 0 -%}
              {%- for block in section.blocks -%}
                {% liquid
                  assign bs = block.settings
                %}
                <div class="swiper-slide">
                  <div class="alp-index-real-new-item">
                    <div class="alp-index-real-new-item-img">
                      {% render 'alp-single-image', image: bs.image, width: 800, aspect_ratio: st.image_aspect_ratio %}
                    </div>
                  </div>
                </div>
              {%- endfor -%}
            {% endif %}
          </div>
        </div>
      </div>
      <div class="swiperTextWrapper">
        <div class="swiperText swiper">
          <div class="swiper-wrapper">
            {%- if section.blocks.size > 0 -%}
              {%- for block in section.blocks -%}
                {% liquid
                  assign bs = block.settings
                %}
                <div class="swiper-slide">
                  <div class="alp-image-real-item-info">
                    <div class="alp-image-real-item-title">{{ bs.title | newline_to_br }}</div>
                    <div class="alp-image-real-item-desc">{{ bs.desc | newline_to_br }}</div>
                  </div>
                </div>
              {%- endfor -%}
            {% endif %}
          </div>
          <div class="swiper-navs swiper-pagination-alp-secondary-tidy">
            {% render 'swiper-pagination', class: 'pagination-secondary-tidy' %}
          </div>
        </div>
      </div>
      {% render 'swiper-navigation-new-3', class: 'hide_mobile' %}
    </div>
  </div>
</div>

<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    let swiperId = '{{ section.id }}';
    let swiperIdnum = swiperId.replace(/\D/g, '');
    let swiperVar = 'TheSwiper' + swiperIdnum;
    const isMobile = window.innerWidth < 768;
    if (!isMobile) {
      var swiperVarImage = new Swiper(`.alp-secondary-tidy-wrapper[data-stid="${swiperId}"] .swiperImage`, {
        spaceBetween: alp_global.gap,
        watchSlidesProgress: true,
        slidesPerView: 5,
        centeredSlides: true,
        loop: true,
        loopedSlides: 5,
        speed: 600,
        autoplay: true,
        effect: 'coverflow',
        coverflowEffect: {
          rotate: 0,
          stretch: '55%',
          depth: 200,
          modifier: 1,
          slideShadows: false,
        },
        breakpoints: {
          1280: {
            slidesPerView: 5,
          },
        },
        on: {
          init: function () {
            this.el.addEventListener('mouseenter', () => {
              this.autoplay.stop();
            });
            this.el.addEventListener('mouseleave', () => {
              this.autoplay.start();
            });
          },
          progress: function (progress) {
            let swiper = this;
            for (let i = 0; i < swiper.slides.length; i++) {
              let slideProgress = swiper.slides[i].progress;
              let innerOffset = swiper.width * 0.5;
              let innerTranslate = slideProgress * innerOffset;
              swiper.slides[i].style.opacity = 1 - Math.abs(innerTranslate / innerOffset) * 0.3;
            }
          },
          setTransition: function (swiper, transition) {},
        },
      });
    } else {
      var swiperVarImage = new Swiper(`.alp-secondary-tidy-wrapper[data-stid="${swiperId}"] .swiperImage`, {
        spaceBetween: alp_global.gap,
        watchSlidesProgress: true,
        slidesPerView: 5,
        centeredSlides: true,
        loop: true,
        loopedSlides: 5,
        speed: 600,
        autoplay: true,
        effect: 'creative',
        creativeEffect: {
          prev: {
            origin: 'left center',
            translate: ['-50%', 0, -400],
            rotate: [0, 0, 0],
            opacity: 0.3,
          },
          next: {
            origin: 'right center',
            translate: ['50%', 0, -400],
            rotate: [0, 0, 0],
            opacity: 0.3,
          },
        },
        on: {
          init: function () {
            this.el.addEventListener('mouseenter', () => {
              this.autoplay.stop();
            });
            this.el.addEventListener('mouseleave', () => {
              this.autoplay.start();
            });
          },
          progress: function (progress) {},
          setTransition: function (swiper, transition) {},
        },
      });
    }
    var swiperTextWrapper = new Swiper(`.alp-secondary-tidy-wrapper[data-stid="${swiperId}"] .swiperText`, {
      spaceBetween: alp_global.gap,
      watchSlidesProgress: true,
      slidesPerView: 1,
      centeredSlides: true,
      loop: true,
      speed: 600,
      autoplay: true,
      pagination: {
        el: `.alp-secondary-tidy-wrapper[data-stid="${swiperId}"] .pagination-secondary-tidy`,
        clickable: true,
      },
      navigation: {
        nextEl: `.alp-secondary-tidy-wrapper[data-stid="${swiperId}"] .swiper-button-next`,
        prevEl: `.alp-secondary-tidy-wrapper[data-stid="${swiperId}"] .swiper-button-prev`,
      },
      breakpoints: {
        1440: {
          slidesPerView: 1,
          spaceBetween: 32,
          // slidesPerGroup : 4,
        },
        1280: {
          slidesPerView: 1,
          spaceBetween: 24,
          // slidesPerGroup : 4,
        },
        768: {
          slidesPerView: 1,
          spaceBetween: 16,
          // slidesPerGroup : 4,
        },
        320: {
          slidesPerView: 1,
          spaceBetween: 16,
          // slidesPerGroup : 2,
        },
      },
    });
    swiperVarImage.update();

    swiperVarImage.controller.control = swiperTextWrapper;
    swiperTextWrapper.controller.control = swiperVarImage;
  });
</script>
