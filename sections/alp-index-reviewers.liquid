{% schema %}
{
  "name": "Alp Index Reviewers",
  "class": "alp-index-reviewers",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "What online reviewers say for Mokwheel"
    },
    {
      "type": "text",
      "id": "link_text_title",
      "label": "Link Text"
    },
    {
      "type": "url",
      "id": "link_url_title",
      "label": "Link Url"
    },
    {
      "type": "text",
      "id": "image_aspect_ratio",
      "label": "Image Aspect Ratio",
      "default": "3/2"
    },
    {
      "type": "text",
      "id": "block_normal_width",
      "label": "Block Normal Width",
      "default": "30%"
    },
    {
      "type": "text",
      "id": "block_max_width",
      "label": "Block Max Width",
      "default": "420px"
    },
    {
      "type": "text",
      "id": "block_max_width_mobile",
      "label": "Block Max Width Mobile",
      "default": "280px"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#000000"
    },
    {
      "type": "select",
      "id": "container",
      "label": "Layout",
      "default": "alp-container",
      "options": [
        {
          "value": "alp-container",
          "label": "Default"
        },
        {
          "value": "alp-container-fluid",
          "label": "Fluid container"
        },
        {
          "value": "alp-full-width",
          "label": "Full width"
        }
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding top",
      "default": 10,
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "em"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding bottom",
      "default": 10,
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "em"
    },
    {
      "type": "checkbox",
      "id": "reset_spacing",
      "label": "Remove default space between sections",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Block Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "video",
          "id": "hover_video",
          "label": "Hover Video"
        },
        {
          "type": "url",
          "id": "video",
          "label": "Video"
        },
        {
          "id": "video_url",
          "type": "video_url",
          "label": "Video url",
          "accept": ["youtube", "vimeo"],
          "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
          "info": "youtube or vimeo url"
        },
        {
          "type": "text",
          "id": "model",
          "label": "Model",
          "default": "Model: Basalt St"
        },
        {
          "type": "richtext",
          "id": "title",
          "label": "Title",
          "default": "<p>UI8 Design TeamReleased the Sapiens - Illustration builder</p>"
        },
        {
          "type": "image_picker",
          "id": "author_img",
          "label": "Author Image"
        },
        {
          "type": "text",
          "id": "author_name",
          "label": "Author Name",
          "default": "Floyd Buckridge"
        },
        {
          "type": "text",
          "id": "date",
          "label": "Date",
          "default": "Feb 03, 2021"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Alp Index Reviewers"
    }
  ]
}
{% endschema %}

{% liquid
  assign st = section.settings
  assign container = st.container
  assign reset_spacing = ''
  if st.reset_spacing
    assign reset_spacing = ' remove_spacing'
  endif
%}

{%- capture style -%}
    --bg-color: {{ st.bg_color }};--text-color: {{ st.text_color }};--padding-top: {{ st.padding_top }};--padding-bottom: {{ st.padding_bottom }};
{%- endcapture -%}

<style>
  [data-stid="{{ section.id }}"] {
    --block-max-width: min({{ st.block_normal_width }},{{ st.block_max_width }});
    --st-min-height: {{ st.min_height }};
   }
   @media (max-width: 999px) {
     [data-stid="{{ section.id }}"] {
       --block-max-width: max({{ st.block_normal_width }},{{ st.block_max_width_mobile }});
     }
   }
</style>

{% style %}
  .alp-index-reviewers p {
    margin: 0;
  }
  .alp-index-reviewers-bigtitle {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .alp-index-reviewers-bigtitle .view-more {
    /* color: #c8c8c8;
    
    font-size: clamp(12px, 4vw, 16px);
    font-style: normal;
    font-weight: 500;
    line-height: 135%;
    text-transform: capitalize;
    text-decoration: underline; */
    line-height: 1.2;
    padding: 0.65em 1.5em;
    border-radius: var(--alp-border-radius);
    transition: 0.3s;
    cursor: pointer;
    background: var(--main-color);
    color: white;
  }
  .alp-index-reviewers-con {
    margin-top: calc(var(--alp-gutter-y) * 1.25);
  }
  .alp-index-reviewers-item {
    background: var(--main-background, #f7f7f7);
    border-radius: calc(var(--alp-border-radius) * 1.5);
    padding: calc(var(--alp-gutter-y) * 0.75);
  }

  /* .alp-index-reviewers-item img {
    border-radius: calc(var(--alp-border-radius) * 0.85);
    display: block;
  } */

  .alp-index-reviewers-item .image-box {
    width: 100%;
    position: relative;
    cursor: pointer;
    transition: filter 0.1s ease;
    margin-bottom: 1.5em;
  }
  .alp-index-reviewers-item .image-box img {
    width: 100%;
    height: auto;
    display: block;
    border-radius: calc(var(--alp-border-radius) * 1);
  }
  .alp-index-reviewers-item .image-box .play_image {
    width: 40px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
  }
  .alp-index-reviewers-item .image-box .play_image svg {
    display: block;
    width: 100%;
  }
  .alp-index-reviewers-item .model {
    display: inline-block;
    color: #000;
    text-transform: uppercase;
    font-size: 12px;
    padding: 0em 1em;
    font-weight: 500;
    background: #d9d9d9;
    line-height: 2;
    border-radius: var(--alp-border-radius);
  }
  .alp-index-reviewers-item .title {
    margin: 1.5rem 0 2rem;
    font-size: clamp(16px, 1vw, 18px);
  }
  .alp-index-reviewers-item .bottom {
    display: flex;
    justify-content: space-between;
    /* align-items: center; */
    gap: 1em;
  }
  .alp-index-reviewers-item .bottom .date {
    flex-basis: 88px;
    text-align: right;
  }
  .alp-index-reviewers-item .author {
    display: flex;
    align-items: center;
  }
  .alp-index-reviewers-item .author img {
    width: 24px;
    height: auto;
    object-fit: cover;
    border-radius: 100px;
    display: block;
  }
  .alp-index-reviewers-item .author span {
    padding-left: 6px;
  }
  .swiper-pagination-index-reviewers {
    margin-top: calc(var(--alp-gutter-y) * 1.5);
  }
  /* 点击播放视频 */
  .index-reviewers-full {
    overflow: hidden;
    position: relative;
  }
  div.index-reviewers-full-bg {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: #000000c7;
    z-index: 199;
    display: block;
    opacity: 0;
    transition: 0.3s;
    pointer-events: none;
  }
  div.index-reviewers-full-bg.active {
    display: block;
    opacity: 1;
  }
  .index-reviewers-full-item {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    pointer-events: none;
    margin: 4vw;
    z-index: 300;
    transition: 0.3s;
    max-width: 1200px;
    max-height: 80%;
    margin: auto;
    display: none;
  }
  .index-reviewers-full-item.active {
    opacity: 1;
    pointer-events: auto;
  }
  .index-reviewers-full-item video,
  .index-reviewers-full-item .video-foreground {
    width: 100%;
    height: 100%;
    object-fit: cover;
    background: #000;
    border-radius: 12px;
  }
  .index-reviewers-full-item .video-foreground iframe {
    width: 100%;
    height: 100%;
  }
  .index-reviewers-full-item .close {
    width: 40px;
    height: 40px;
    background-color: #fff;
    border-radius: 50%;
    position: absolute;
    right: -2em;
    top: -2em;
    cursor: pointer;
    z-index: 31;
  }
  .index-reviewers-full-item .close svg {
    width: 36px;
    height: 36px;
    margin-top: 2px;
    margin-left: 2px;
  }
  .index-reviewers-full-item .close svg path {
    stroke-width: 1;
  }

  .alp-review-slider-item.swiper-slide {
    width: min(100%, var(--block-max-width));
  }
  .hover-video,
  .hover-video video {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 8px;
  }
  @media screen and (max-width: 999px) {
    .alp-review-slider-item.swiper-slide {
      width: min(100%, calc(var(--block-max-width) * 1));
    }
    .alp-index-reviewers-con {
      margin-top: calc(var(--alp-gutter-y) * 0.65);
    }
    .index-reviewers-full-item {
      padding-left: 8px;
      padding-right: 8px;
      max-height: max-content;
    }
    .index-reviewers-full-item video,
    .index-reviewers-full-item .video-foreground {
      aspect-ratio: 16 / 9;
    }
    .index-reviewers-full-item .video-foreground iframe {
      border: none;
      border-radius: 16px;
    }
    .index-reviewers-full-item .close {
      right: 0.5em;
      top: 0em;
      width: 30px;
      height: 30px;
    }
    .index-reviewers-full-item .close svg {
      width: 28px;
      height: 28px;
    }
    .swiper-pagination-index-reviewers {
      margin-top: calc(var(--alp-gutter-y) * 1);
    }
    .alp-index-reviewers-item .bottom {
      font-size: 14px;
    }
    .alp-index-reviewers-con .view-more {
      line-height: 1.2;
      padding: 10px 32px;
      border-radius: var(--alp-border-radius);
      cursor: pointer;
      border: 1px solid #e83f0c;
      color: #e83f0c;
      font-size: clamp(16px, 1vw, 18px);
      max-width: 150px;
      margin: 32px auto 0;
    }
    .swiper-pagination-index-reviewers {
      display: none;
    }
  }
{% endstyle %}

<div class="alp-section overflow-hidden {{ reset_spacing }}" data-stid="{{ section.id }}" style="{{ style }}">
  <div class="alp-section-container page-width {{ container }}">
    <div class="alp-index-reviewers">
      <div class="alp-index-reviewers-bigtitle">
        <h2 class="headline__h2">{{ st.title }}</h2>
        <div class="view-more headline__h6 hide_mobile">
          {% if st.link_text_title %}
            <a href="{{ st.link_url_title }}">{{ st.link_text_title }}</a>
          {% endif %}
        </div>
      </div>
      <div
        class="alp-index-reviewers-con swiper overflow-visible"
        id="{{ section.id | replace: '-', '' | prepend: 'id_' }}"
      >
        <div class="swiper-wrapper">
          {%- if section.blocks.size > 0 -%}
            {%- for block in section.blocks -%}
              {% liquid
                assign bs = block.settings
                assign video_id = ''
                if bs.video_url.type == 'youtube'
                  assign video_id = bs.video_url | replace: 'https://www.youtube.com/watch?v=', ''
                elsif bs.video_url.type == 'vimeo'
                  assign video_id = bs.video_url | replace: 'https://vimeo.com/', ''
                endif
              %}
              {%- capture online_video_url -%}
              {%- if bs.video_url.type == 'youtube' -%}
              https://www.youtube.com/embed/{{ video_id }}?controls=0&autoplay=1&mute=0&playsinline=1&loop=0&playlist={{ video_id }}
              {%- elsif bs.video_url.type == 'vimeo' -%}
              https://player.vimeo.com/video/{{ video_id }}?controls=0background=1&autoplay=1&muted=0&loop=0
              {%- endif -%}
              {%- endcapture -%}
              <div class="alp-review-slider-item swiper-slide">
                <div class="alp-index-reviewers-item" data-id="{{ block.id | replace: '-', '' }}">
                  {% if bs.video != blank %}
                    <a
                      class="full-aa"
                      href="{{ bs.video }}"
                      data-fslightbox="reviews"
                    ></a>
                  {%- endif -%}
                  {%- if bs.video_url.type == 'youtube' -%}
                    <a
                      class="full-aa"
                      href="{{ bs.video_url }}"
                      data-embed="{{ online_video_url }}"
                      data-fslightbox="reviews"
                    ></a>
                  {%- elsif bs.video_url.type == 'vimeo' -%}
                    <a
                      class="full-aa"
                      href="#{{ block.id | replace: '-', '' | prepend: 'vimeoid_' }}"
                      data-embed="{{ online_video_url }}"
                      data-fslightbox="reviews"
                    ></a>
                    <iframe
                      data-src="https://player.vimeo.com/video/{{ video_id }}?controls=0background=1&autoplay=0&muted=0&loop=0"
                      frameborder="0"
                      allowfullscreen
                      class="hidden"
                      id="{{ block.id | replace: '-', '' | prepend: 'vimeoid_' }}"
                      class="lazy"
                    ></iframe>
                  {%- endif -%}
                  <div class="image-box">
                    {%- if bs.image -%}
                      {% render 'alp-single-image', image: bs.image, width: 1280, aspect_ratio: '1280/720' %}
                    {%- elsif bs.hover_video != blank -%}
                      {%- liquid
                        assign encoded_id = video_id | url_encode
                        assign youtube_poster = 'https://img.youtube.com/vi/' | append: encoded_id | append: '/maxresdefault.jpg'
                      -%}
                      <div class="hover-video" data-id="{{ block.id | replace: '-', '' }}">
                        {% comment %}
                          {{
                            bs.hover_video
                            | video_tag:
                              loop: 'loop',
                              muted: true,
                              playsinline: true,
                              autoplay: false,
                              controls: false,
                              preload: 'metadata',
                              poster: youtube_poster
                          }}
                        {% endcomment %}
                        <video
                          class="lazy"
                          muted
                          preload
                          loop
                          x5-video-player-fullscreen="true"
                          x5-playsinline
                          playsinline
                          webkit-playsinline
                          poster="{{ youtube_poster }}"
                        >
                          {%- for source in bs.hover_video.sources -%}
                            <source data-src="{{ source.url }}" type="video/{{ source.format }}">
                          {%- endfor -%}
                        </video>
                      </div>
                    {% else %}
                      <div class="thumbnail-container">
                        <img
                          data-src="https://img.youtube.com/vi/{{ video_id }}/maxresdefault.jpg"
                          alt="{{ bs.text }}"
                          style="aspect-ratio:1280/720"
                          width="100%"
                          height="100%"
                          loading="lazy"
                          class="lazy"
                        >
                      </div>
                    {% endif %}
                    <div class="play_image">{% render 'icon-play-2' %}</div>
                  </div>
                  <div class="model">{{ bs.model }}</div>
                  <h3 class="headline__h6 title">{{ bs.title | strip_html | strip }}</h3>
                  <div class="bottom">
                    <div class="author">
                      {% render 'alp-single-image', image: bs.author_img, width: 1280, aspect_ratio: '1/1' %}
                      <span>{{ bs.author_name }}</span>
                    </div>
                    <div class="date">{{ bs.date }}</div>
                  </div>
                </div>
              </div>
            {%- endfor -%}
          {% endif %}
        </div>
        <div class="swiper-navs swiper-pagination-index-reviewers">
          {% render 'swiper-pagination', class: 'pagination-products' %}
          {% render 'swiper-navigation', class: '' %}
        </div>
        <div class="view-more headline__h6 hide_desktop">
          {% if st.link_text_title %}
            <a href="{{ st.link_url_title }}">{{ st.link_text_title }}</a>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</div>

<script
  type="module"
>
  document.addEventListener('DOMContentLoaded', () => {
    
     // swiper
     var BlockId = '{{ section.id | replace: '-', '' | prepend: 'id_' }}';
     var Swiper_reviews_egf = new Swiper(`.alp-index-reviewers .swiper#${BlockId}`, {
      pagination: {
        el: '.pagination-products',
        clickable :true,
      },
      speed:600,
      // autoHeight: true, 
      // freeMode: true,
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      slidesPerView: 1,
      spaceBetween: 16,
      breakpoints: { 
        320: {
          slidesPerView: 1.1,
          slidesPerGroup: 1,
        },
        768: {
          slidesPerView: 'auto',
          slidesPerGroup: 1,
        },
        1280: {
          slidesPerView: 'auto',
          slidesPerGroup: 1,
          spaceBetween: 24,
        },
      }
    })

    // hover 
    $(".alp-review-slider-item")
      .on("mouseenter", function () {
        const $video = $(this).find(".hover-video video")[0];
        const videoElement = $video;
        if (videoElement) {
          videoElement.play().catch((error) => {
            // 忽略 AbortError
            if (error.name !== "AbortError") {
              console.error("播放失败:", error);
            }
          });
        }
      })
      .on("mouseleave", function () {
        const $video = $(this).find(".hover-video video");
        const videoElement = $video[0];
        // 仅在视频播放时暂停
        if (videoElement && !videoElement.paused) {
          videoElement.pause();
        }
      });

    
  });
</script>
